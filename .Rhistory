chull.area <- chull.poly@area
chull.area->t0.disp
}else{
t0.disp<-0
}
DisparityOutC<-data.frame(rbind(DisparityOutC,t0.disp))
}
TAXA<-subset(SubsetMatrix,select = Group)
subset(SubsetMatrix,select = -Group)->SubsetMatrix
DivergencetimesC<-as.numeric(unique(colnames(SubsetMatrix)))
cbind(DivergencetimesC*-1,DisparityOutC)->OutputTableC
lines(OutputTableC, type="l", xlab="time", ylab="disparity", lwd=2, col=COL)
OutList<-list('output'=OutputTableC)
return(OutList)
}
AltDTT(trimmed.roxo.tree, roxo.phylocoords)->OUTPUT
AltDTT(trimmed.roxo.tree, roxo.phylocoords)->OUTPUT
library(sp)
require(PBSmapping)
require(av)
library(PhylogeneticEM)
AltDTT<-function(phy,data)
{
TD<- treedata(phy, data, warnings=FALSE)
Morpho<-TD$data
tree<-TD$phy
tree<-multi2di(tree)
InternalNodes=seq(from=length(tree$tip)+1, to=length(tree$tip)+tree$Nnode, by=1)
Times=vector()
n=0
for (i in InternalNodes){
n=n+1
Times[n]=branching.times(tree)[as.character(i)]
}
NodeDate=cbind(as.character(InternalNodes), as.character(Times))
options(stringsAsFactors=FALSE)
data<- data.frame(Group=tree$tip.label)
NodeTimes=cbind(as.character(InternalNodes), as.character(Times))
TreeTips=tree$tip.label
Group0=rep("Group0", length(TreeTips))
TaxaMatrix=data.frame(cbind(TreeTips, Group0))
colName=NodeTimes[1,2]
Node=NodeTimes[1,1]
DaughterA=tree$edge[tree$edge[,1]== Node,2][1]
DaughterB=tree$edge[tree$edge[,1]== Node,2][2]
GroupNameA=paste(as.numeric(DaughterA))
GroupNameB=paste(as.numeric(DaughterB))
TaxaDaughterA=tips(tree, DaughterA)
TaxaDaughterB=tips(tree, DaughterB)
TaxaMatrix[TaxaMatrix[,"TreeTips"] %in% TaxaDaughterA,colName]=GroupNameA
TaxaMatrix[TaxaMatrix[,"TreeTips"] %in% TaxaDaughterB,colName]=GroupNameB
data[data[,"Group"] %in% TaxaDaughterA,colName]=GroupNameA
data[data[,"Group"] %in% TaxaDaughterB,colName]=GroupNameB
timeorder=order(Times, decreasing=T)
for ( i in 2:dim(NodeTimes)[1]){
NodeinOrd= timeorder[i]
colName=NodeTimes[NodeinOrd,2]
Node=NodeTimes[NodeinOrd,1]
DaughterA=tree$edge[tree$edge[,1]== Node,2][1]
DaughterB=tree$edge[tree$edge[,1]== Node,2][2]
GroupNameA=paste(as.numeric(DaughterA))
GroupNameB=paste(as.numeric(DaughterB))
TaxaDaughterA=tips(tree, DaughterA)
TaxaDaughterB=tips(tree, DaughterB)
NodeinOrd2=timeorder[i-1]
TaxaMatrix[,colName]=TaxaMatrix[,NodeTimes[NodeinOrd2,2]]
TaxaMatrix[TaxaMatrix[,"TreeTips"] %in% TaxaDaughterA,colName]=GroupNameA
TaxaMatrix[TaxaMatrix[,"TreeTips"] %in% TaxaDaughterB,colName]=GroupNameB
data[,colName]=data[,NodeTimes[NodeinOrd2,2]]
data[data[,"Group"] %in% TaxaDaughterA,colName]=GroupNameA
data[data[,"Group"] %in% TaxaDaughterB,colName]=GroupNameB
}
Taxa<-seq(from=length(tree$tip)*2-1)
MorphoMatrix <-data.frame(cbind(Taxa))
#reorder morpho to match tree tips
Morpho[match(x = as.vector(tree$tip),table = rownames(Morpho)),]->Morpho
z<- ncol(Morpho)
for (i in 1:z){
AncestralState= fastAnc(tree, Morpho[,i])
character<- append( Morpho[,i], AncestralState)
MorphoMatrix<-data.frame(cbind(MorphoMatrix,character))
}
MorphoAncestors<-MorphoMatrix
pc1 <-prcomp(MorphoAncestors, scale. = T)
x <- pc1$x
PCAvalues <- as.matrix(x[ ,1:2])
PCAvalues<-data.frame(cbind(Taxa,PCAvalues))
y<- ncol(TaxaMatrix)
subset(data,select = -Group)->data2
DisparityOut<-data.frame()
for (i in 3:y)
{
TaxaAtTime<-unique(TaxaMatrix[,i])
what<-as.matrix(TaxaAtTime)
Npoints<-nrow(what)
test<- subset(PCAvalues, PCAvalues$Taxa %in% TaxaAtTime)
test<- test[,2:3]
colnames(test)<- c("X","Y")
if (length(test$X) >2){
box.hpts <- chull(x = test$X, y = test$Y)
box.hpts <- c(box.hpts, box.hpts[1])
box.chull.coords <- test[box.hpts,]
chull.poly <- Polygon(box.chull.coords, hole=F)
chull.area <- chull.poly@area
chull.area->t0.disp
}
else {t0.disp<-0}
DisparityOut<-data.frame(rbind(DisparityOut,t0.disp))
}
Divergencetimes<-as.numeric(colnames(data2))
cbind(DisparityOut,Divergencetimes*-1)->OutputTable
OutList<-list('output'=OutputTable,'MorphoMatrix'=data, "PCAvalues"=PCAvalues)
plot(OutputTable$`Divergencetimes * -1`,OutputTable$X0, type="l", ylab="Disparity",xlab="age")
return(OutList)
}
##For example run
##AltDTT(phy,data)->OUTPUT
SubsetDTT<-function(DATA=DATA,PCAvalues=PCAvalues,SUBSET=c(1:5),COL="red")
{
SubsetMatrix<-DATA[SUBSET,]
y<- ncol(SubsetMatrix)
DisparityOutC<-data.frame()
for (i in 2:y)
{
TaxaAtTime<-unique(SubsetMatrix[,i])
what<-as.matrix(TaxaAtTime)
Npoints<-nrow(what)
test<- subset(PCAvalues, PCAvalues$Taxa %in% TaxaAtTime)
test<- test[,2:3]
colnames(test)<- c("X","Y")
if (length(test$X) >2){
box.hpts <- chull(x = test$X, y = test$Y)
box.hpts <- c(box.hpts, box.hpts[1])
box.chull.coords <- test[box.hpts,]
chull.poly <- Polygon(box.chull.coords, hole=F)
chull.area <- chull.poly@area
chull.area->t0.disp
}else{
t0.disp<-0
}
DisparityOutC<-data.frame(rbind(DisparityOutC,t0.disp))
}
TAXA<-subset(SubsetMatrix,select = Group)
subset(SubsetMatrix,select = -Group)->SubsetMatrix
DivergencetimesC<-as.numeric(unique(colnames(SubsetMatrix)))
cbind(DivergencetimesC*-1,DisparityOutC)->OutputTableC
lines(OutputTableC, type="l", xlab="time", ylab="disparity", lwd=2, col=COL)
OutList<-list('output'=OutputTableC)
return(OutList)
}
AltDTT(trimmed.roxo.tree, roxo.phylocoords)->OUTPUT
OUTPUT$MorphoMatrix->TotalMatrix
OUTPUT$PCAvalues->PCAvalues
#To plot morphospace growth in subclades the following code will track taxonomic subsets (SUBSET;Easy to ID these species using the TotalMatrix output from above)
#to make a movie of the of image files of the DTT analysis that can be converted into a movie
dir.create(file.path(getwd(), "PCAplot"))
setwd("PCAplot")
y<- ncol(TotalMatrix)
#Create appropriate subdivisions
Clade1<-TotalMatrix[1:5,]
Clade2<-TotalMatrix[6:22,]
Clade3<-TotalMatrix[23:32,]
#Set limits for plotting
min(PCAvalues[,2]*1.2)->minX
max(PCAvalues[,2]*1.2)->maxX
min(PCAvalues[,3]*1.2)->minY
max(PCAvalues[,3]*1.2)->maxY
#Plot all timeslices
for (i in 2:y)
{
AlltaxaAtTime<-unique(TotalMatrix$Group)
testAll<- subset(PCAvalues, row.names(PCAvalues) %in% AlltaxaAtTime)
testAll<- testAll[,2:3]
colnames(testAll)<- c("X","Y")
calcConvexHull(testAll)->polyPtsAll
Clade1TaxaAtTime<-unique(Clade1[,i])
testClade1<- subset(PCAvalues, PCAvalues$Taxa %in% Clade1TaxaAtTime)
testClade1<- testClade1[,2:3]
colnames(testClade1)<- c("X","Y")
calcConvexHull(testClade1)->polyPts1
Clade2TaxaAtTime <-unique(Clade2[,i])
testClade2<- subset(PCAvalues, PCAvalues$Taxa %in% Clade2TaxaAtTime)
testClade2 <- testClade2[,2:3]
colnames(testClade2)<- c("X","Y")
calcConvexHull(testClade2)->polyPts2
Clade3TaxaAtTime <-unique(Clade3[,i])
testClade3<- subset(PCAvalues, PCAvalues$Taxa %in% Clade3TaxaAtTime)
testClade3 <- testClade3[,2:3]
colnames(testClade3)<- c("X","Y")
calcConvexHull(testClade3)->polyPts3
filename<-paste("PolyPCA",i,".jpg", sep = "")
jpeg(file = filename,width = 1500,height = 1200)
plotPolys(polyPtsAll, xlim =c(minX,maxX), ylim =c(minY,maxY))
addPolys(polyPts1, col="#DACFE0")
addPolys(polyPts2,col="#D5E3E8")
addPolys(polyPts3,col = "#F7F9CC")
points(testAll,pch=21,col="white")
points(testAll)
points(testClade1,pch=21,col="#470F65")
points(testClade1)
points(testClade2,pch=21,col="#2C738D")
points(testClade2)
points(testClade3,pch=21,col="#D5E100")
points(testClade3)
abline(h = 0, v = 0)
dev.off()
}
sprintf("PolyPCA%1d.jpg",2:y)->jpg_files
av_encode_video(jpg_files, 'output.mp4', framerate = 5)
setwd('..')
pdf('./Output/DisparityTTime.pdf', width=7.2, height=5)
AltDTT(trimmed.roxo.tree, roxo.phylocoords)
SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(1:5),COL = "#470F65")
SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(6:22),COL = "#2C738D")
SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(23:32),COL = "#D5E100")
par(fig = c(0.05,0.5, .25, .98), new = T)
plot(NULL, xlim=c(-40,0), ylim=c(0,45), xlab="", ylab="", cex.axis=.75)
SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(1:5),COL = "#470F65")
SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(6:22),COL = "#2C738D")
SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(23:32),COL = "#D5E100")
dev.off()
times=AltDTT(trimmed.roxo.tree, roxo.phylocoords)
plot(NULL, xlim=c(-40,0), ylim=c(0,45), xlab="", ylab="", cex.axis=.75)
time1=SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(1:5),COL = "#470F65")
time2=SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(6:22),COL = "#2C738D")
time3=SubsetDTT(DATA = TotalMatrix,PCAvalues = PCAvalues,SUBSET = c(23:32),COL = "#D5E100")
write.csv(times$output, file = "./Output/DivergenceTimes.txt")
## model comparisons
mod.models=read.csv("Mod_Int/modules.03jan22.csv")
mod.coords=arrayspecs(phylocoords, 33, 3)
## PhyloCorrect EMMLi
PCEm=phyloEmmli(mod.coords, trimmed.tree, method = "pgls", EMMLi = T, mod = mod.models, N_sample = 49, "./Output/modularity.PC.csv") #7.mod.sep.Mod + sep.between best model
# Figures
net.layout=read.csv("Mod_Int/network.layout.csv", row.names = 1) #set layout of nodes
#network for EMMLi phylo corrected
emmli.output.PC=read.csv("./Output/emmli.phylo.csv", row.names = 1)
## model comparisons
mod.models=read.csv("Mod_Int/modules.03jan22.csv")
mod.coords=arrayspecs(phylocoords, 33, 3)
## PhyloCorrect EMMLi
PCEm=phyloEmmli(mod.coords, trimmed.tree, method = "pgls", EMMLi = T, mod = mod.models, N_sample = 49, "./Output/modularity.PC.csv") #7.mod.sep.Mod + sep.between best model
# Figures
net.layout=read.csv("Mod_Int/network.layout.csv", row.names = 1) #set layout of nodes
#network for EMMLi phylo corrected
emmli.output.PC=read.csv("./Mod_Int/emmli.phylo.csv", row.names = 1)
emmli.within.PC=read.csv("./Mod_Int/emmli.phylo.within.csv", row.names = 1)
Q.PC.Colors=colorRampPalette(c("#808080","#000000"))
Q.PC=qgraph(emmli.output.PC, vsize=emmli.within.PC$X1*15, edge.color=Q.PC.Colors(20))
Q.PC$layout=net.layout
pdf("./Output/Modularity.EMMLi.PC.pdf", width=7.2, height=5)
plot(Q.PC)
dev.off()
### Creating modularity hypotheses
# 1) Creating the hypothesis matrix
LM_no<-c(1:33)
structure<-rep("NA", 33)
structure[c(14,15,22,23,24,33)]<-"mouth"
structure[c(6,7,8,9,10,11,12,13,16,17)]<-"head"
structure[c(18,19,20,21)]<-"oper"
structure[c(25,26,27,28)]<-"pectoralfin"
structure[c(5)]<-"dorsalfin"
structure[c(29,30,31,32)]<-"pelvicfin"
structure[c(2,3)]<-"caudalfin"
structure[c(1,4)]<-"analcloaca"
structure
# 2) Modularity hypotheses
#Full integration
hyp1<-rep("A", 33)
#All Separate (best supported model via EMMLi - Likelihood) #7.mod
hyp2<-rep("NA", 33)
hyp2[structure=="mouth"]<-"A"
hyp2[structure=="head"]<-"B"
hyp2[structure=="oper"]<-"C"
hyp2[structure=="pectoralfin" | structure=="dorsalfin"]<-"D"
hyp2[structure=="pelvicfin"]<-"E"
hyp2[structure=="analcloaca"]<-"F"
hyp2[structure=="caudalfin"]<-"G"
#6.mod
hyp3<-rep("NA", 33)
hyp3[structure=="mouth"]<-"A"
hyp3[structure=="head" | structure=="oper"]<-"B"
hyp3[structure=="pectoralfin" | structure=="dorsalfin"]<-"C"
hyp3[structure=="pelvicfin"]<-"D"
hyp3[structure=="analcloaca"]<-"E"
hyp3[structure=="caudalfin"]<-"F"
#L4 hypothesis - 2 modules (head+pectoral fins vs. rest of body)
hypL4<-rep("NA", 33)
hypL4[structure=="mouth" | structure=="head" | structure=="oper" | structure=="pectoralfin"]<-"A"
hypL4[structure=="dorsalfin" | structure=="pelvicfin" | structure=="caudalfin" | structure=="analcloaca"]<-"B"
#L5 hypothesis - 3 modules (head, midbody, tail)
hypL5<-rep("NA", 33)
hypL5[structure=="mouth" | structure=="head" | structure=="oper"]<-"A"
hypL5[structure=="dorsalfin" | structure=="pelvicfin" | structure=="pectoralfin"]<-"B"
hypL5[ structure=="caudalfin" | structure=="analcloaca"]<-"C"
#4.mod
hyp6<-rep("NA", 33)
hyp6[structure=="mouth"]<-"A"
hyp6[structure=="head" | structure=="oper"]<-"B"
hyp6[structure=="dorsalfin" | structure=="pelvicfin" | structure=="pectoralfin"]<-"C"
hyp6[ structure=="caudalfin" | structure=="analcloaca"]<-"D"
#3.mod
hyp7<-rep("NA", 33)
hyp7[structure=="mouth" | structure=="head" | structure=="oper"]<-"A"
hyp7[structure=="dorsalfin" | structure=="pelvicfin" | structure=="pectoralfin"]<-"B"
hyp7[structure=="caudalfin" | structure=="analcloaca"]<-"C"
#2.mod
hyp8<-rep("NA", 33)
hyp8[structure=="mouth" | structure=="head" | structure=="oper"]<-"A"
hyp8[structure=="dorsalfin" | structure=="pelvicfin" | structure=="pectoralfin" | structure=="caudalfin" | structure=="analcloaca"]<-"B"
# 3) Combine hypotheses
hyp_mat<-cbind(LM_no, structure, hyp1, hyp2, hyp3, hypL4, hypL5, hyp6, hyp7, hyp8)
### Modularity tests ###
#tree<-pruned_tree
allsep<-phylo.modularity(mod.coords, hyp_mat[,4], trimmed.tree, iter=999)
funct1<-phylo.modularity(mod.coords, hyp_mat[,5], trimmed.tree, iter=999)
funct2<-phylo.modularity(mod.coords, hyp_mat[,6], trimmed.tree, iter=999)
funct3<-phylo.modularity(mod.coords, hyp_mat[,7], trimmed.tree, iter=999)
funct4<-phylo.modularity(mod.coords, hyp_mat[,8], trimmed.tree, iter=999)
funct5<-phylo.modularity(mod.coords, hyp_mat[,9], trimmed.tree, iter=999)
funct6<-phylo.modularity(mod.coords, hyp_mat[,10], trimmed.tree, iter=999)
#Comparing the effect sizes from these different hypotheses
best_hyp<-compare.CR(allsep, funct1, funct2, funct3, funct4, funct5, funct6, CR.null = F)
summary(best_hyp) #BM also supports the 7mod (all separate) -4.425087
allsep$CR.mat
intergration.data=phylo.integration(mod.coords, phy=trimmed.tree, partition.gp =hyp_mat[,4], iter=999)
#network for CR
CR.output.PC=read.csv("Mod_Int//geomorph.output.csv", row.names = 1)
#CR.within.PC=read.csv("~/Desktop/Research Projects/Dis_Ch2_AC Body Shape/0_Raw Data/!Analysis/emmli.phylo.within.csv", row.names = 1)
Q.PC.Colors=colorRampPalette(c("#808080","#000000"))
Q.PC=qgraph(CR.output.PC, edge.color=Q.PC.Colors(20))
Q.PC$layout=net.layout
pdf("../../2_Output/Modularity.CR.PC.pdf", width=7.2, height=5)
pdf("Output//Modularity.CR.PC.pdf", width=7.2, height=5)
plot(Q.PC)
dev.off()
#network for PLS
PLS.output.PC=read.csv("Mod_Int/geomorph.inter.output.csv", row.names = 1)
#CR.within.PC=read.csv("~/Desktop/Research Projects/Dis_Ch2_AC Body Shape/0_Raw Data/!Analysis/emmli.phylo.within.csv", row.names = 1)
Q.PC.Colors=colorRampPalette(c("#808080","#000000"))
Q.PC=qgraph(PLS.output.PC, edge.color=Q.PC.Colors(20))
Q.PC$layout=net.layout
pdf("./Output/Modularity.PLS.PC.pdf", width=7.2, height=5)
plot(Q.PC)
dev.off()
Clade1<-phylocoords[1:36,]
Clade2<-phylocoords[37:41,]
Clade3<-phylocoords[42:49,]
mod.Clade1=arrayspecs(Clade1, 33, 3)
mod.Clade2=arrayspecs(Clade2, 33, 3)
mod.Clade3=arrayspecs(Clade3, 33, 3)
species=as.factor(row.names(Clade1))
Hypostominae.trimmed.tree=drop.tip(tree,tree$tip.label[-na.omit(match(species, tree$tip.label))])
species=as.factor(row.names(Clade2))
Hypoptopomatinae.trimmed.tree=drop.tip(tree,tree$tip.label[-na.omit(match(species, tree$tip.label))])
species=as.factor(row.names(Clade3))
Loricariinae.trimmed.tree=drop.tip(tree,tree$tip.label[-na.omit(match(species, tree$tip.label))])
### CLADE 1: Hypostominae ###
### Modularity tests ###
allsep<-phylo.modularity(mod.Clade1, hyp_mat[,4], Hypostominae.trimmed.tree, iter=999)
# Figures
net.layout.Hypop.Lori =read.csv("Mod_Int/network.layout.csv", row.names = 1) #set layout of nodes
net.layout.Hypos =read.csv("Mod_Int/network.layout.Hypos.csv", row.names = 1) #set layout of nodes
#network for Hypostominae
Hypos.modularity=read.csv("Mod_Int/Hypos.Modular.csv", row.names = 1)
Hypos.intergration=read.csv("Mod_Int/Hypos.Inter.csv", row.names = 1)
Hypos.Colors=colorRampPalette(c("#808080","#000000"))
Hypos.PC=qgraph(Hypos.modularity, edge.color=Hypos.Colors(20))
Hypos.PC$layout=net.layout.Hypos
Hypos.PC.int=qgraph(Hypos.intergration, edge.color=Hypos.Colors(20))
Hypos.PC.int$layout=net.layout.Hypos
pdf("./Output/ModularityIntergration.Hypos.pdf", width=7.2, height=10)
par(mfrow=c(2,1))
plot(Hypos.PC)
plot(Hypos.PC.int)
dev.off()
#############
#network for Hypoptopomatinae
Hypop.modularity=read.csv("Mod_Int/Hypop.Modular.csv", row.names = 1)
Hypop.intergration=read.csv("Mod_Int/Hypop.Inter.csv", row.names = 1)
NetworkColors=colorRampPalette(c("#808080","#000000"))
Hypop.PC=qgraph(Hypop.modularity, edge.color=NetworkColors(20))
Hypop.PC$layout=net.layout.Hypop.Lori
Hypop.PC.int=qgraph(Hypop.intergration, edge.color=NetworkColors(20))
Hypop.PC.int$layout=net.layout.Hypop.Lori
pdf("./Output/ModularityIntergration.Hypop.pdf", width=7.2, height=10)
par(mfrow=c(2,1))
plot(Hypop.PC)
plot(Hypop.PC.int)
dev.off()
#############
#network for Loricariinae
Lori.modularity=read.csv("Mod_Int/Lori.Modular.csv", row.names = 1)
Lori.intergration=read.csv("Mod_Int/Lori.Inter.csv", row.names = 1)
NetworkColors=colorRampPalette(c("#808080","#000000"))
Lori.PC=qgraph(Lori.modularity, edge.color=NetworkColors(20))
Lori.PC$layout=net.layout.Hypop.Lori
Lori.PC.int=qgraph(Lori.intergration, edge.color=NetworkColors(20))
Lori.PC.int$layout=net.layout.Hypop.Lori
pdf("./Output/ModularityIntergration.Lori.pdf", width=7.2, height=10)
par(mfrow=c(2,1))
plot(Lori.PC)
plot(Lori.PC.int)
dev.off()
#Evolutionary rates of modules
ratesallsep<-compare.multi.evol.rates(A=mod.coords, gp=hyp_mat[,4], phy=trimmed.tree, iter=999) #7.mod - best supported via EMMLi and CR
ratesallsep
evocol=as.matrix(ratesallsep$sigma.d.gp)
bt.colblind_pal=colorRampPalette(c("#470f65","#3b4f8c","#25858e", "#25ab7f", "#4ec266", "#d5e100"))
evocol.Col <- bt.colblind_pal(10)[as.numeric(cut(evocol,breaks = 10))]
pdf(file = "./Output/ModuleEvoRates.Colors.pdf", width=7, height=5)
plot(c(1,2,3,4,5,6,7), evocol, pch=19, col=evocol.Col, cex=4)
dev.off()
# Lesser Models
ratesfunct4<-compare.multi.evol.rates(A=mod.coords, gp=hyp_mat[,8], phy=trimmed.tree, iter=999) #4.mod - 2nd best CR;
ratesfunct1<-compare.multi.evol.rates(A=mod.coords, gp=hyp_mat[,5], phy=trimmed.tree, iter=999) #6.mod - 3rd best CR;
ratesfunct6<-compare.multi.evol.rates(A=mod.coords, gp=hyp_mat[,10], phy=trimmed.tree, iter=999) #2.mod - 4th best CR;
ratesfunct3<-compare.multi.evol.rates(A=mod.coords, gp=hyp_mat[,7], phy=trimmed.tree, iter=999) #L5 - 5th best CR;
ratesfunct5<-compare.multi.evol.rates(A=mod.coords, gp=hyp_mat[,9], phy=trimmed.tree, iter=999) #3.mod - 6th CR;
ratesfunct2<-compare.multi.evol.rates(A=mod.coords, gp=hyp_mat[,6], phy=trimmed.tree, iter=999) #L4 - 7th CR;
#Evolutionary rates of modules
ratesallsep1<-compare.multi.evol.rates(A=mod.Clade1, gp=hyp_mat[,8], phy=Hypostominae.trimmed.tree, iter=999) #7.mod - best supported via EMMLi and CR
ratesallsep1
evocol1=as.matrix(ratesallsep1$sigma.d.gp)
bt.colblind_pal=colorRampPalette(c("#470f65","#3b4f8c","#25858e", "#25ab7f", "#4ec266", "#d5e100"))
evocol.Col1 <- bt.colblind_pal(10)[as.numeric(cut(evocol1,breaks = 10))]
pdf(file = "./Output/ModuleEvoRates.Hypostominae.Colors.pdf", width=7, height=5)
plot(c(1,2,3,4), evocol1, pch=19, col=evocol.Col1, cex=4)
dev.off()
#Evolutionary rates of modules
ratesallsep2<-compare.multi.evol.rates(A=mod.Clade2, gp=hyp_mat[,4], phy=Hypoptopomatinae.trimmed.tree, iter=999) #7.mod - best supported via EMMLi and CR
ratesallsep2
evocol2=as.matrix(ratesallsep2$sigma.d.gp)
bt.colblind_pal=colorRampPalette(c("#470f65","#3b4f8c","#25858e", "#25ab7f", "#4ec266", "#d5e100"))
evocol.Col2 <- bt.colblind_pal(10)[as.numeric(cut(evocol2,breaks = 10))]
pdf(file = "./Output/ModuleEvoRates.Hypoptopomatinae.Colors.pdf", width=7, height=5)
plot(c(1,2,3,4,5,6,7), evocol2, pch=19, col=evocol.Col2, cex=4)
dev.off()
#Evolutionary rates of modules
ratesallsep3<-compare.multi.evol.rates(A=mod.Clade3, gp=hyp_mat[,4], phy=Loricariinae.trimmed.tree, iter=999) #7.mod - best supported via EMMLi and CR
ratesallsep3
evocol3=as.matrix(ratesallsep3$sigma.d.gp)
bt.colblind_pal=colorRampPalette(c("#470f65","#3b4f8c","#25858e", "#25ab7f", "#4ec266", "#d5e100"))
evocol.Col3 <- bt.colblind_pal(10)[as.numeric(cut(evocol3,breaks = 10))]
pdf(file = "./Output/ModuleEvoRates.Loricariinae.Colors.pdf", width=7, height=5)
plot(c(1,2,3,4,5,6,7), evocol3, pch=19, col=evocol.Col3, cex=4)
dev.off()
pdf(file = "./Output/ModuleEvoRates.ALL.Colors.pdf", width=5, height=5)
par(mfrow=c(2,2))
plot(c(1,2,3,4,5,6,7), evocol, pch=19, col=evocol.Col, cex=3)
plot(c(1,2,3,4), evocol1, pch=19, col=evocol.Col1, cex=3)
plot(c(1,2,3,4,5,6,7), evocol2, pch=19, col=evocol.Col2, cex=3)
plot(c(1,2,3,4,5,6,7), evocol3, pch=19, col=evocol.Col3, cex=3)
dev.off()
library(mvMORPH)
sig_axes = bsDimension(lambda)
PCA_sig <- phypca$x[trimmed.tree$tip.label, 1:sig_axes]
fit_1 <- mvBM(trimmed.tree, PCA_sig, model = "BM1") #BestFit AICc: -139.707
fit_2 <- mvOU(trimmed.tree, PCA_sig, model = "OU1") #AICc:-135.0555
fit_1$AICc; fit_2$AICc
lnShape=phypca$x[,1]
fit.shape=multirateBM(trimmed.tree, lnShape, n.iter = 3)
#isolate mouth landmarks and run evo rates
mod.coords.mouth=mod.coords[c(14,15,22,23,24,33),,]
mouth.pca=gm.prcomp(mod.coords.mouth, phy=trimmed.tree, align.to.phy=T)
mouth.shape=mouth.pca$x[,1]
fit.mouth.shape=multirateBM(trimmed.tree, mouth.shape, n.iter = 3)
phendata<-phypca$x[,1:2]
convtips<-c("Corumbataia_tocantinensis","Exastilithoxus_sp","Lithogenes_villosus", "Isorineloricaria_spinosissima")
#convtips<-c("Otocinclus_vestitus","Paralithoxus_bovallii","Dolichancistrus_cobrensis")
answer1<-convnumsig(trimmed.tree,phendata,convtips,10,plot=FALSE,ellipse=NULL,plotellipse=NULL)
answer2<-convratsig(trimmed.tree,phendata,convtips,10)
answer=convnum(trimmed.tree,phendata,convtips)
pdf(file = "./Output/convergence.pdf", width=7.2, height=5)
convnum(trimmed.tree,phendata,convtips)
dev.off()
#whole morphospace
lm.null=lm(phylocoords~1)
lm.full=lm(phylocoords~phyloclass$Habitat.Albert+phyloclass$Vegetation.Albert+phyloclass$Diet.Adult+phyloclass$Diet.Albert+phyloclass$Sand)
fit.null=procD.pgls(lm.null, phy = trimmed.tree, iter = 999, SS.type = "III")
fit.full=procD.pgls(lm.full,phy = trimmed.tree, iter = 999, SS.type = "III")
fit.null$aov.table
anovatable=fit.full$aov.table
write.csv(anovatable, file = "./Output/PGLS.txt")
#Separate subfamilies
Clade1.1<-phylocoords[1:36,]
Clade2.1<-phylocoords[37:41,]
Clade3.1<-phylocoords[42:49,]
species=as.factor(row.names(Clade1.1))
Hypostominae.trimmed.tree=drop.tip(tree,tree$tip.label[-na.omit(match(species, tree$tip.label))])
species=as.factor(row.names(Clade2.1))
Hypoptopomatinae.trimmed.tree=drop.tip(tree,tree$tip.label[-na.omit(match(species, tree$tip.label))])
species=as.factor(row.names(Clade3.1))
Loricariinae.trimmed.tree=drop.tip(tree,tree$tip.label[-na.omit(match(species, tree$tip.label))])
# Hypostominae
lm.full.1=lm(Clade1.1~phyloclass[1:36,]$Habitat.Albert+phyloclass[1:36,]$Vegetation.Albert+phyloclass[1:36,]$Diet.Adult+phyloclass[1:36,]$Diet.Albert) #Sand = No for all
fit.full.1=procD.pgls(lm.full.1,phy = Hypostominae.trimmed.tree, iter = 999, SS.type = "III")
fit.full.1$aov.table
# Hypoptopomatinae
lm.full.2=lm(Clade2.1~phyloclass[37:41,]$Habitat.Albert+phyloclass[37:41,]$Diet.Adult) #Vegetation = RiverVeg (all but Corumbataia tocantinensis); Diet.Albert = all algivore; Sand = No for all
fit.full.2=procD.pgls(lm.full.2,phy = Hypoptopomatinae.trimmed.tree, iter = 999, SS.type = "III")
fit.full.2$aov.table
# Loricariinae
lm.full.3=lm(Clade3.1~phyloclass[42:49,]$Diet.Adult+phyloclass[42:49,]$Habitat.Albert+phyloclass[42:49,]$Vegetation.Albert) #Diet.Albert = all algivore,
fit.full.3=procD.pgls(lm.full.3,phy = Loricariinae.trimmed.tree, iter = 999, SS.type = "III")
fit.full.3$aov.table
fit.full$aov.table # All
fit.full.1$aov.table # Hypostominae
fit.full.2$aov.table # Hypoptopomatinae
fit.full.3$aov.table # Loricariinae
physignal(Clade1.1, Hypostominae.trimmed.tree)
physignal(Clade2.1, Hypoptopomatinae.trimmed.tree)
physignal(Clade3.1, Loricariinae.trimmed.tree)
